---
- name: Run preflight checks
  ansible.builtin.import_tasks: preflight.yml

- name: Install prereqs
  ansible.builtin.import_tasks: prereqs.yml

- name: Generate backup script
  ansible.builtin.template:
    src: "{{ stagesync_backups_script_template }}"
    dest: "{{ stagesync_backup_script }}"
    owner: "{{ stagesync_backup_user }}"
    group: "{{ stagesync_backup_group }}"
    mode: '0755'
  when: stagesync_backups_create_backups_scripts

- name: Generate cleanup script
  ansible.builtin.template:
    src: "{{ stagesync_backups_cleanup_script_template }}"
    dest: "{{ stagesync_backup_script | dirname }}/cleanup.sh"
    owner: "{{ stagesync_backup_user }}"
    group: "{{ stagesync_backup_group }}"
    mode: '0755'
  when: stagesync_backups_create_backups_scripts

- name: Run backup script
  become: true
  become_user: "{{ stagesync_backup_user }}"
  ansible.builtin.shell: |
      {{ stagesync_backup_script }} {{ stagesync_sourcedb }}
  args:
    executable: /bin/bash
  changed_when: false
  when: stagesync_execute_backup

- name: Determine db backup filename
  ansible.builtin.shell: |
      set -o pipefail
      ls -1tr | grep "{{ stagesync_sourcedb }}\..*\.dump$" | tail -1
  args:
    chdir: "{{ stagesync_source_backups_dir }}"
    executable: /bin/bash
  register: command_output
  changed_when: false

- name: Store name of backup file in a variable
  ansible.builtin.set_fact:
    stagesync_backupfilename: "{{ command_output.stdout | trim }}"

- name: Print backup file name
  ansible.builtin.debug:
    var: stagesync_backupfilename

- name: Creates tmp directory
  become: true
  ansible.builtin.file:
    path: "{{ stagesync_source_tmp_dir }}"
    owner: "root"
    group: "root"
    mode: "0777"
    state: directory

- name: Copy backup file to tmp folder
  ansible.builtin.copy:
    src: "{{ stagesync_source_backups_dir }}/{{ stagesync_backupfilename }}"
    dest: "{{ stagesync_source_tmp_dir }}/{{ stagesync_backupfilename }}"
    owner: "root"
    group: "root"
    mode: "0777"
    remote_src: true

- name: Transfer backup file to destination
  become: false
  ansible.posix.synchronize:
    src: "{{ stagesync_source_tmp_dir }}/{{ stagesync_backupfilename }}"
    dest: "{{ stagesync_dest_tmp_dir }}/{{ stagesync_backupfilename }}"
    mode: pull
  delegate_to: "{{ item }}"
  vars:
    ansible_ssh_extra_args: '-A'
  with_items: "{{ groups['stagesync-destdb'] }}"

- name: Set backup file name on destination
  become: false
  ansible.builtin.set_fact:
    stagesync_backupfilename: "{{ stagesync_backupfilename }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  vars:
    ansible_ssh_extra_args: '-A'
  with_items: "{{ groups['stagesync-destdb'] }}"

- name: Cleanup backup file from source
  ansible.builtin.file:
    path: "{{ stagesync_source_tmp_dir }}/{{ stagesync_backupfilename }}"
    state: absent
